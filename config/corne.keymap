/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        MINUS_F1: f1_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp MINUS>, <&kp F1>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N1_F2: f2_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N1>, <&kp F2>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N2_F3: f3_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N2>, <&kp F3>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N3_F4: f4_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N3>, <&kp F4>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N4_F5: f5_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N4>, <&kp F5>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N5_F6: f6_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N5>, <&kp F6>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N6_F7: f7_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N6>, <&kp F7>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N7_F8: f8_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N7>, <&kp F8>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N8_F9: f9_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N8>, <&kp F9>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N9_F10: f10_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N9>, <&kp F10>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        N0_F11: f11_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp N0>, <&kp F11>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        BSLH_F12: f12_key {
            compatible = "zmk,behavior-mod-morph";
            bindings = <&kp BSLH>, <&kp F12>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
    };
};

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------------------------------
// |  Q  |  W    |  E   |  R  |  T  |                                       |  Y  |  U   |  I   |  O   | P     |
// |  A  |  S    |  D   |  F  |  G  |                                       |  H  |  J   |  K   |  L   | '     |
// |  Z  |  X    |  C   |  V  |  B  |                                       |  N  |  M   | COMA |DOT   | /     |
//               | GUI  | LWR | SPC |                                       | ENT | RSE  | BSPC |
                        display-name = "Base";
                        bindings = <
   &kp Q      &kp W        &kp E       &kp R      &kp T                     &kp Y   &kp U            &kp I       &kp O        &kp P
   &mt LGUI A &mt LSHIFT S &mt LCTRL D &mp LALT F &kp G                     &kp H   &mp RALT J       &mp RCTRL K &mp RSHIFT L &mp RGUI SQT
   &kp Z      &kp X         &kp C      &kp V      &kp B                     &kp N   &kp M            &kp COMA    &kp DOT      &kp SLASH
               &kp RGUI &mo 1 &kp SPACE                                     &kp RET &mo 2            &kp BSPC
                        >;
                };

                lower_layer {
// ---------------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 | BT3 | BT4 |                                       | HOME | PAGE_DOWN | PAGE_UP | END |        |
// |       |     |     |     |     |                                       | LFT  | DOWN      | UP      | RGT |        |
// |       |     |     |     |     |                                       |      |           |         |     | INSERT |
//               | GUI |     | TAB |                                       | ENT  | ESC       | DEL     |
                        display-name = "Lower";
                        bindings = <
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4        &kp HOME   &kp PG_UP  &kp PG_DN &kp END   &trans
   &trans       &trans       &trans       &trans       &trans              &kp LEFT   &kp DOWN   &kp UP    &kp RIGHT &trans 
   &trans       &trans       &trans       &trans       &bt BT_CLR          &trans     &trans     &trans    &trans    &kp INS 
                             &kp LGUI     &trans       &kp TAB             &kp RET    &kp ESC    &kp DEL
                        >;
                };

                raise_layer {
// ---------------------------------------------------------------------------------------------------------
// | 1! |  2@ |  3# |  4$ |  5% |                                          |  6^ |  7& |  8* |  9(  |  0)  |
// | -_ |  =+ |  {  |  [  |  (  |                                          |  )  |  ]  |  }  |  /?  |  \|  |
// | `~ |     |     |     |  :  |                                          |  ;  |     |     |      |      |
//            | GUI | ESC | TAB |                                          | ENT |     | DEL |
                        display-name = "Raise";
                        bindings = <

   &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                          &kp N6    &kp N7    &kp N8    &kp N9   &kp N0
   &kp MINUS &kp EQUAL &kp LBRC  &kp LBKT  &kp LPAR                        &kp RPAR  &kp RBKT  &kp RBRC  &kp FSLH &kp BSLH
   &kp TILDE &trans    &trans    &trans    &kp COLON                       &kp SEMI  &kp       &trans    &trans   &trans
                       &kp LGUI  &kp ESC   &kp TAB                         &kp RET   &trans    &kp DEL
                        >;
                };
        };
};
